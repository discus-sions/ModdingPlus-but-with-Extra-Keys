
jobs:

  # Neko

  - job: BuildCppLinux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: |
          sudo add-apt-repository ppa:haxe/releases -y
          sudo apt update -y
          sudo apt install haxe -y
        displayName: 'Install Haxe'
      - script: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          mkdir ~/artifacts

          haxelib install lime
          haxelib run lime setup linux
          haxelib install openfl
          haxelib install flixel
          haxelib --always run lime setup flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install tjson
          haxelib install json2object
          haxelib install uniontypes
          haxelib install hxjsonast
          haxelib install linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
          echo $runId > VERSION
        env:
          runId : $(Build.BuildNumber)
        displayName: 'Install haxelibs'
      - script: haxelib run lime build linux
        displayName: 'Compile'
      - script: tar -czf bin.tar.gz 'export/release/linux/bin'
        displayName: 'Archive'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'cppLinuxOutput'
          targetPath: bin.tar.gz

  - job: BuildMac
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - script: brew install haxe
        displayName: 'Install Haxe'
      - script: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          
          haxelib install lime
          haxelib install openfl
          haxelib install flixel
          haxelib run lime setup flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install tjson
          haxelib install json2object
          haxelib install uniontypes
          haxelib install hxjsonast
          haxelib install linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
          echo $runId > VERSION
        env:
          runId : $(Build.BuildNumber)
        displayName: 'Install haxelibs'
      - script: haxelib run lime build mac
        displayName: 'Compile'
      - script: |
          [ -d "export/release/mac/bin" ] && echo "Directory neko exists."
          [ -d "export/release" ] && echo "Directory release exists."
          [ -d "export/release/mac" ] && echo "Directory mac exists."
          [ -d "export/release/windows/bin" ] && echo "Directory windows exists."
          tar -czf bin.tar.gz 'export/release/macos/bin'
        displayName: 'Archive'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'cppMacOutput'
          targetPath: bin.tar.gz
  - job: BuildCppWindows
    pool:
      vmImage: 'windows-2019'
    steps:
      - powershell: |
          choco install --no-progress haxe -y
          $nekoPath = (Get-ChildItem C:/ProgramData/chocolatey/lib/neko/*/neko.dll -Recurse).Directory
          echo "##vso[task.setvariable variable=NEKOPATH]$nekoPath"
        displayName: 'Install Haxe'
      - script: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > nul
          haxelib install lime
          haxelib install openfl
          haxelib install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib run flixel-tools setup
          haxelib install flixel-ui
          haxelib install tjson
          haxelib install json2object
          haxelib install uniontypes
          haxelib install hxjsonast
          haxelib install linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
          echo $env:runId > VERSION
        env:
          runId : $(Build.BuildNumber)
        displayName: 'Install haxelibs'
      - script: haxelib run lime build cpp
        displayName: 'Compile'
      - script: tar -czf bin.tar.gz export/release/windows/bin
        displayName: 'Archive'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'cppWindowsOutput'
          targetPath: 'export/release/windows/bin'
  - job: BuildHtml5
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: |
          sudo add-apt-repository ppa:haxe/releases -y
          sudo apt update -y
          sudo apt install haxe -y
        displayName: 'Install Haxe'
      - script: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          mkdir ~/artifacts

          haxelib install lime
          haxelib run lime setup linux
          haxelib install openfl
          haxelib install flixel
          haxelib --always run lime setup flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install tjson
          haxelib install json2object
          haxelib install uniontypes
          haxelib install hxjsonast
          haxelib install linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib install hxcpp-debug-server
          haxelib list
          echo $env:runId > VERSION
        env:
          runId : $(Build.BuildNumber)
        displayName: 'Install haxelibs'
      - script: haxelib run lime build html5
        displayName: 'Compile'
      - script: tar -czf bin.tar.gz 'export/release/html5/bin'
        displayName: 'Archive'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'html5'
          targetPath: bin.tar.gz